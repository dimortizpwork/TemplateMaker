AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM resources for net-super-nice-project service"
Metadata:
  AlertIdentifier: "mybrain"
  Tags:
    CostCenter: "mybrain"
Parameters:
  AppGroup:
    Type: "String"
    Default: "net-super-nice-project"
    AllowedPattern: "^[a-z0-9\-]{1,21}$"
  Environment:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/global/environment"
    Description: "Environment in which resources are deployed."
Resources:
  RoleApiToLambda:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${AppGroup}-role-api-to-lambda"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "apigateway.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !ImportValue "default-lambda-managed-policy-arn"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      PermissionsBoundary: !ImportValue "iam-boundary-application-deployment-permission-boundary"
      Tags:
        - Key: "AppGroup"
          Value: !Ref "AppGroup"
        - Key: "AppRole"
          Value: "role"
        - Key: "Environment"
          Value: !Ref "Environment"
        - Key: "Name"
          Value: !Sub "${AppGroup}-role-api-to-lambda"
Outputs:
  RoleApiToLambda:
    Description: "The role ARN that should be used by api in order to access the lambda "
    Value: !GetAtt "RoleApiToLambda.Arn"
    Export:
      Name: !Sub "${AppGroup}-iam-api-to-lambda"